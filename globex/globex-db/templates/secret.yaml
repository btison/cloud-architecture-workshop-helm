kind: Secret
apiVersion: v1
metadata:
  name: {{ include "globex-db.name" . }}
  labels:
    {{- include "globex-db.labels" . | nindent 4 }}
  annotations:
    {{- include "globex-db.argocd-syncwave" . | nindent 4 }}
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretName := (include "globex-db.name" .) }}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $adminSecret := (get $secretData "postgresql-admin-password") | default (randAlpha 12 | b64enc) }}
  postgresql-admin-password: {{ $adminSecret | quote }}
type: Opaque
